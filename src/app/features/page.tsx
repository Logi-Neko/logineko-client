"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Footer } from "@/components/footer";
import {
  BookOpen,
  Gamepad2,
  Award,
  Users,
  Shield,
  Smartphone,
  Download,
  Play,
  Star,
  CheckCircle,
  Zap,
  Heart,
  Brain,
  Target,
  Clock,
  Palette,
  X,
} from "lucide-react";
import Link from "next/link";

const mainFeatures = [
  {
    icon: BookOpen,
    title: "Truy·ªán T∆∞∆°ng T√°c C√πng Neko",
    description:
      "Tham gia nh·ªØng c√¢u chuy·ªán ho·∫°t h√¨nh s·ªëng ƒë·ªông v·ªõi gi·ªçng ƒë·ªçc v√† ho·∫°t ƒë·ªông t∆∞∆°ng t√°c h·∫•p d·∫´n.",
    details: [
      "H∆°n 50 c√¢u chuy·ªán ho·∫°t h√¨nh",
      "L·ªìng ti·∫øng chuy√™n nghi·ªáp",
      "T∆∞∆°ng t√°c c·∫£m ·ª©ng th√¥ng minh",
      "C√¢u h·ªèi hi·ªÉu n·ªôi dung",
      "Luy·ªán t·ª´ v·ª±ng phong ph√∫",
    ],
    color: "from-red-400 to-pink-400",
  },
  {
    icon: Gamepad2,
    title: "V·ª´a Ch∆°i V·ª´a H·ªçc V·ªõi Neko",
    description:
      "Mini game vui nh·ªôn gi√∫p b√© h·ªçc ki·∫øn th·ª©c c∆° b·∫£n m√† v·∫´n th√≠ch th√∫ m·ªói ng√†y.",
    details: [
      "Tr√≤ ch∆°i to√°n h·ªçc & ƒë·∫øm s·ªë",
      "Nh·∫≠n bi·∫øt ch·ªØ c√°i",
      "Ph√¢n bi·ªát h√¨nh d·∫°ng & m√†u s·∫Øc",
      "Tr√≤ ch∆°i tr√≠ nh·ªõ & logic",
      "Kh√°m ph√° khoa h·ªçc",
    ],
    color: "from-blue-400 to-cyan-400",
  },
  {
    icon: Award,
    title: "Theo D√µi Ti·∫øn Tr√¨nh H·ªçc T·∫≠p",
    description:
      "Theo d√µi s·ª± ph√°t tri·ªÉn c·ªßa b√© v·ªõi h·ªá th·ªëng b√°o c√°o v√† th√†nh t√≠ch tr·ª±c quan.",
    details: [
      "Theo d√µi ti·∫øn tr√¨nh theo th·ªùi gian th·ª±c",
      "Huy hi·ªáu & ph·∫ßn th∆∞·ªüng h·∫•p d·∫´n",
      "B√°o c√°o chi ti·∫øt cho ph·ª• huynh",
      "Theo d√µi c·ªôt m·ªëc h·ªçc t·∫≠p",
      "G·ª£i √Ω b√†i h·ªçc c√° nh√¢n h√≥a",
    ],
    color: "from-yellow-400 to-orange-400",
  },
  {
    icon: Users,
    title: "B·∫£ng ƒêi·ªÅu Khi·ªÉn Cho Ph·ª• Huynh",
    description:
      "C√¥ng c·ª• ki·ªÉm so√°t v√† theo d√µi to√†n di·ªán, an t√¢m tuy·ªát ƒë·ªëi cho ba m·∫π.",
    details: [
      "M√¥i tr∆∞·ªùng an to√†n cho tr·∫ª",
      "Qu·∫£n l√Ω th·ªùi gian s·ª≠ d·ª•ng",
      "Th√¥ng b√°o ti·∫øn ƒë·ªô h·ªçc t·∫≠p",
      "L·ªçc n·ªôi dung theo ƒë·ªô tu·ªïi",
      "H·ªó tr·ª£ nhi·ªÅu h·ªì s∆° con",
    ],
    color: "from-green-400 to-emerald-400",
  },
  {
    icon: Shield,
    title: "An To√†n & B·∫£o M·∫≠t",
    description:
      "Tu√¢n th·ªß COPPA, kh√¥ng qu·∫£ng c√°o, kh√¥ng mua h√†ng trong ·ª©ng d·ª•ng, b·∫£o m·∫≠t tuy·ªát ƒë·ªëi.",
    details: [
      "Tu√¢n th·ªß COPPA",
      "Kh√¥ng qu·∫£ng c√°o",
      "Kh√¥ng mua h√†ng trong app",
      "Ch·∫ø ƒë·ªô offline c√≥ s·∫µn",
      "B·∫£o v·ªá d·ªØ li·ªáu c√° nh√¢n",
    ],
    color: "from-purple-400 to-indigo-400",
  },
  {
    icon: Smartphone,
    title: "T∆∞∆°ng Th√≠ch ƒêa Thi·∫øt B·ªã",
    description: "Tr·∫£i nghi·ªám li·ªÅn m·∫°ch tr√™n m·ªçi thi·∫øt b·ªã, m·ªçi n∆°i m·ªçi l√∫c.",
    details: [
      "H·ªó tr·ª£ iOS & Android",
      "T·ªëi ∆∞u cho m√°y t√≠nh b·∫£ng",
      "ƒê·ªìng b·ªô ƒëa n·ªÅn t·∫£ng",
      "Truy c·∫≠p n·ªôi dung offline",
      "L∆∞u ti·∫øn tr√¨nh tr√™n ƒë√°m m√¢y",
    ],
    color: "from-teal-400 to-blue-400",
  },
];

const learningAreas = [
  {
    icon: Brain,
    title: "Ph√°t Tri·ªÉn T∆∞ Duy",
    description: "Tr√≠ nh·ªõ, ch√∫ √Ω, gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ v√† t∆∞ duy ph·∫£n bi·ªán",
    age: "5-10 tu·ªïi",
    activities: 45,
  },
  {
    icon: BookOpen,
    title: "Ng√¥n Ng·ªØ & T·∫≠p ƒê·ªçc Vi·∫øt",
    description: "ƒê·ªçc hi·ªÉu, vi·∫øt ch·ªØ, h·ªçc t·ª´ v·ª±ng v√† giao ti·∫øp",
    age: "5-10 tu·ªïi",
    activities: 60,
  },
  {
    icon: Zap,
    title: "Ki·∫øn Th·ª©c STEM",
    description: "To√°n h·ªçc, khoa h·ªçc, c√¥ng ngh·ªá v√† k·ªπ thu·∫≠t",
    age: "5-10 tu·ªïi",
    activities: 38,
  },
  {
    icon: Palette,
    title: "Ngh·ªá Thu·∫≠t S√°ng T·∫°o",
    description: "V·∫Ω tranh, t√¥ m√†u, √¢m nh·∫°c v√† bi·ªÉu ƒë·∫°t s√°ng t·∫°o",
    age: "5-10 tu·ªïi",
    activities: 25,
  },
  {
    icon: Heart,
    title: "K·ªπ NƒÉng X√£ H·ªôi & C·∫£m X√∫c",
    description: "ƒê·ªìng c·∫£m, hi·ªÉu c·∫£m x√∫c, k·ªπ nƒÉng x√£ h·ªôi v√† nh·∫≠n th·ª©c b·∫£n th√¢n",
    age: "5-10 tu·ªïi",
    activities: 20,
  },
];

const testimonials = [
  {
    name: "TS. Sarah Williams",
    role: "Chuy√™n Gia Ph√°t Tri·ªÉn Tr·∫ª Em",
    quote:
      "LogiNeko c√¢n b·∫±ng ho√†n h·∫£o gi·ªØa gi√°o d·ª•c v√† gi·∫£i tr√≠. Tr·∫ª em h·ªçc m√† kh√¥ng c·∫£m th·∫•y b·ªã √©p bu·ªôc!",
    rating: 5,
  },
  {
    name: "Hi·ªáu Tr∆∞·ªüng Mark Thompson",
    role: "Tr∆∞·ªùng Ti·ªÉu H·ªçc Hope Hill",
    quote:
      "Ch√∫ng t√¥i lu√¥n gi·ªõi thi·ªáu LogiNeko ƒë·∫øn c√°c b·∫≠c ph·ª• huynh. M·ªôt c√¥ng c·ª• h·ªó tr·ª£ h·ªçc t·∫≠p tuy·ªát v·ªùi!",
    rating: 5,
  },
  {
    name: "Ph·ª• huynh Jennifer Chen",
    role: "Gi√°o d·ª•c t·∫°i nh√†",
    quote:
      "·ª®ng d·ª•ng n√†y ƒë√£ thay ƒë·ªïi ho√†n to√†n l·ªãch h·ªçc ·ªü nh√† v√† tr√™n tr∆∞·ªùng. C√°c con t√¥i mong ƒë·ª£i gi·ªù h·ªçc m·ªói ng√†y!",
    rating: 5,
  },
];

export default function FeaturesPage() {
  const [showVideo, setShowVideo] = useState(false);

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="relative overflow-hidden bg-gradient-to-br from-pink-50 via-purple-50 to-cyan-50 py-10">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-2">
          <div className="text-center space-y-2">
            <Badge className="bg-gradient-secondary text-gray-800 px-6 py-2 rounded-playful text-lg">
              üöÄ N·ªÅn T·∫£ng H·ªçc T·∫≠p To√†n Di·ªán
            </Badge>
            <h1 className="text-5xl lg:text-6xl font-bold leading-tight">
              <span className="bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
                M·ªçi Th·ª© Con B·∫°n
              </span>
              <br />
              <span className="bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
                C·∫ßn C√πng Neko! üê±
              </span>
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
              Kh√°m ph√° b·ªô t√≠nh nƒÉng gi√°o d·ª•c to√†n di·ªán c·ªßa LogiNeko ƒë∆∞·ª£c thi·∫øt
              k·∫ø b·ªüi c√°c chuy√™n gia ph√°t tri·ªÉn tr·∫ª em. C√πng Neko - ch√∫ m√®o ƒë√°ng
              y√™u trong nh·ªØng cu·ªôc phi√™u l∆∞u h·ªçc t·∫≠p vui v·∫ª, an to√†n v√† hi·ªáu qu·∫£
              d√†nh cho tr·∫ª em t·ª´ 5-10 tu·ªïi.
            </p>

            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button
                size="lg"
                className=" cursor-pointer bg-gradient-to-r from-pink-500 to-violet-600 hover:from-pink-600 hover:to-violet-700 text-white rounded-full px-8 py-4 text-lg font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 hover:rotate-1"
              >
                <Download className="w-5 h-5 mr-2" />
                D√πng Th·ª≠ Mi·ªÖn Ph√≠ Ngay
              </Button>
              <Button
                size="lg"
                variant="outline"
                className=" cursor-pointer rounded-full px-8 py-4 text-lg font-semibold border-2 border-pink-500 text-pink-600 hover:bg-gradient-to-r hover:from-pink-500 hover:to-violet-600 hover:text-white hover:border-transparent transform hover:scale-105 transition-all duration-300 hover:-rotate-1 hover:shadow-lg"
                onClick={() => setShowVideo(true)}
              >
                <Play className="w-5 h-5 mr-2" />
                Xem Video Demo
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Main Features */}
      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center space-y-4 mb-16">
            <h2 className="text-4xl font-bold bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
              T√≠nh NƒÉng M·∫°nh M·∫Ω Cho Vi·ªác H·ªçc Hi·ªáu Qu·∫£
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              M·ªói t√≠nh nƒÉng ƒë·ªÅu ƒë∆∞·ª£c thi·∫øt k·∫ø c·∫©n th·∫≠n ƒë·ªÉ h·ªó tr·ª£ s·ª± ph√°t tri·ªÉn
              v√† h√†nh tr√¨nh h·ªçc t·∫≠p c·ªßa con b·∫°n
            </p>
          </div>

          <div className="grid lg:grid-cols-2 gap-12">
            {mainFeatures.map((feature, index) => {
              const IconComponent = feature.icon;
              return (
                <Card
                  key={feature.title}
                  className="rounded-playful shadow-playful hover:shadow-lg transition-all duration-300 border-0 overflow-hidden"
                >
                  <CardHeader className="relative">
                    <div
                      className={`w-16 h-16 bg-gradient-to-r ${feature.color} rounded-playful flex items-center justify-center mb-4`}
                    >
                      <IconComponent className="w-8 h-8 text-white" />
                    </div>
                    <CardTitle className="text-2xl font-bold text-gray-800">
                      {feature.title}
                    </CardTitle>
                    <CardDescription className="text-gray-600 text-lg">
                      {feature.description}
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <ul className="space-y-3">
                      {feature.details.map((detail, i) => (
                        <li key={i} className="flex items-center space-x-3">
                          <CheckCircle className="w-5 h-5 text-green-500 flex-shrink-0" />
                          <span className="text-gray-700">{detail}</span>
                        </li>
                      ))}
                    </ul>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      </section>

      {/* Learning Areas */}
      <section className="py-20 bg-gradient-to-br from-purple-50 via-pink-50 to-orange-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center space-y-4 mb-16">
            <h2 className="text-4xl font-bold bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
              C√°c Lƒ©nh V·ª±c H·ªçc T·∫≠p To√†n Di·ªán
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              H·ªó tr·ª£ m·ªçi kh√≠a c·∫°nh ph√°t tri·ªÉn c·ªßa con b·∫°n v·ªõi n·ªôi dung ph√π h·ª£p
              v·ªõi l·ª©a tu·ªïi
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {learningAreas.map((area) => {
              const IconComponent = area.icon;
              return (
                <Card
                  key={area.title}
                  className="rounded-playful shadow-playful hover:shadow-lg transition-shadow border-0 bg-white"
                >
                  <CardHeader className="text-center">
                    <div className="w-16 h-16 bg-gradient-primary rounded-full flex items-center justify-center mx-auto mb-4">
                      <IconComponent className="w-8 h-8 text-white" />
                    </div>
                    <CardTitle className="text-xl font-bold text-gray-800">
                      {area.title}
                    </CardTitle>
                    <CardDescription className="text-gray-600">
                      {area.description}
                    </CardDescription>
                  </CardHeader>
                  <CardContent className="text-center space-y-3">
                    <div className="flex justify-between items-center">
                      <span className="text-sm text-gray-500">ƒê·ªô tu·ªïi:</span>
                      <Badge variant="outline" className="rounded-playful">
                        {area.age}
                      </Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm text-gray-500">Ho·∫°t ƒë·ªông:</span>
                      <span className="font-semibold text-primary">
                        {area.activities}+
                      </span>
                    </div>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      </section>

      {/* Expert Testimonials */}
      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center space-y-4 mb-16">
            <h2 className="text-4xl font-bold bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
              ƒê∆∞·ª£c C√°c Chuy√™n Gia Tin C·∫≠y
            </h2>
            <p className="text-xl text-gray-600">
              Xem c√°c chuy√™n gia gi√°o d·ª•c n√≥i g√¨ v·ªÅ LogiNeko
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            {testimonials.map((testimonial, index) => (
              <Card
                key={index}
                className="rounded-playful shadow-playful border-0"
              >
                <CardContent className="p-6">
                  <div className="flex items-center space-x-1 mb-4">
                    {[...Array(testimonial.rating)].map((_, i) => (
                      <Star
                        key={i}
                        className="w-5 h-5 text-yellow-400 fill-current"
                      />
                    ))}
                  </div>
                  <p className="text-gray-600 mb-6 italic">
                    "{testimonial.quote}"
                  </p>
                  <div className="flex items-center space-x-3">
                    <div className="w-12 h-12 bg-gradient-to-r from-pink-500 to-violet-600 rounded-full flex items-center justify-center">
                      <span className="text-white font-bold text-lg">
                        {testimonial.name.charAt(0)}
                      </span>
                    </div>
                    <div>
                      <p className="font-semibold text-gray-800">
                        {testimonial.name}
                      </p>
                      <p className="text-sm text-gray-500">
                        {testimonial.role}
                      </p>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section className="py-20 bg-gradient-to-r from-pink-500 via-purple-600 to-indigo-600">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="space-y-8">
            <h2 className="text-4xl font-bold text-white">
              S·∫µn S√†ng Cho H√†nh Tr√¨nh H·ªçc T·∫≠p C√πng Neko Ch∆∞a?
            </h2>
            <p className="text-xl text-white/90">
              H√†ng ng√†n gia ƒë√¨nh ƒë√£ tin t∆∞·ªüng LogiNeko ƒë·ªÉ ƒë·ªìng h√†nh c√πng con
              trong gi√°o d·ª•c.
            </p>

            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button
                size="lg"
                className="bg-white text-primary hover:bg-gray-100 rounded-playful px-8 py-4 text-lg font-semibold shadow-playful"
              >
                <Download className="w-5 h-5 mr-2" />
                T·∫£i ·ª®ng D·ª•ng Mi·ªÖn Ph√≠
              </Button>
              <Link href="/shop">
                <Button
                  size="lg"
                  className="bg-white text-primary hover:bg-gray-100 border-2 border-white rounded-playful px-8 py-4 text-lg font-semibold"
                >
                  Kh√°m Ph√° C·ª≠a H√†ng
                </Button>
              </Link>
            </div>

            <div className="flex items-center justify-center space-x-8 text-white/80">
              <div className="flex items-center space-x-2">
                <CheckCircle className="w-5 h-5" />
                <span>T·∫£i mi·ªÖn ph√≠</span>
              </div>
              <div className="flex items-center space-x-2">
                <CheckCircle className="w-5 h-5" />
                <span>Kh√¥ng qu·∫£ng c√°o</span>
              </div>
              <div className="flex items-center space-x-2">
                <CheckCircle className="w-5 h-5" />
                <span>An to√†n cho tr·∫ª</span>
              </div>
            </div>
          </div>
        </div>
      </section>
      <Footer />

      {showVideo && (
        <div className="fixed inset-0 z-50 bg-black bg-opacity-75 flex items-center justify-center p-4">
          <div className="relative bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-hidden">
            <button
              onClick={() => setShowVideo(false)}
              className="absolute top-4 right-4 z-10 bg-white rounded-full p-2 shadow-lg hover:bg-gray-100 transition-colors"
            >
              <X className="w-6 h-6 text-gray-600" />
            </button>
            <div className="aspect-video">
              <iframe
                width="100%"
                height="100%"
                src="https://www.youtube.com/embed/dQw4w9WgXcQ?autoplay=1"
                title="Video Demo LogiNeko"
                frameBorder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                allowFullScreen
                className="rounded-lg"
              ></iframe>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
