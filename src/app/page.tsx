"use client";

import { useState } from "react";
import { motion } from "framer-motion";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Footer } from "@/components/footer";
import {
  Star,
  BookOpen,
  Users,
  Award,
  Play,
  Shield,
  Gamepad2,
  X,
  Download,
  CheckCircle,
  Sparkles,
} from "lucide-react";

const mainFeatures = [
  {
    icon: BookOpen,
    title: "B√†i H·ªçc T∆∞∆°ng T√°c C√πng Neko",
    description:
      "Tham gia nh·ªØng b√†i h·ªçc s·ªëng ƒë·ªông v·ªõi gi·ªçng ƒë·ªçc v√† ho·∫°t ƒë·ªông t∆∞∆°ng t√°c h·∫•p d·∫´n.",
    details: [
      "H∆°n 50 b√†i h·ªçc to√†n di·ªán",
      "L·ªìng ti·∫øng chuy√™n nghi·ªáp",
      "T∆∞∆°ng t√°c c·∫£m ·ª©ng th√¥ng minh",
      "C√¢u h·ªèi hi·ªÉu n·ªôi dung",
      "Luy·ªán t·ª´ v·ª±ng phong ph√∫",
    ],
    color: "from-red-400 to-pink-400",
  },
  {
    icon: Gamepad2,
    title: "Cu·ªôc Thi C√πng B·∫°n B√®",
    description:
      "Tham gia cu·ªôc thi h·ªçc t·∫≠p v·ªõi b·∫°n b√®, nh·∫≠n star t·ª´ b√†i h·ªçc ƒë·ªÉ m·ªü kh√≥a nh√¢n v·∫≠t.",
    details: [
      "Cu·ªôc thi h√†ng tu·∫ßn theo star",
      "X·∫øp h·∫°ng d·ª±a tr√™n star h·ªçc ƒë∆∞·ª£c",
      "T√≠ch l≈©y star t·ª´ t·ª´ng b√†i h·ªçc",
      "Ph·∫ßn th∆∞·ªüng h·∫•p d·∫´n cho top x·∫øp",
      "T√≠nh to√°n ƒëi·ªÉm c√¥ng b·∫±ng & minh b·∫°ch",
    ],
    color: "from-blue-400 to-cyan-400",
  },
  {
    icon: Award,
    title: "B·∫£ng X·∫øp H·∫°ng & Nh√¢n V·∫≠t",
    description:
      "X·∫øp h·∫°ng theo star h·ªçc ƒë∆∞·ª£c, m·ªü kh√≥a v√† s∆∞u t·∫ßm h∆°n 50 nh√¢n v·∫≠t ƒë·∫∑c bi·ªát.",
    details: [
      "B·∫£ng x·∫øp h·∫°ng to√†n c·∫ßu theo star",
      "M·ªü kh√≥a nh√¢n v·∫≠t khi ƒë·∫°t star nh·∫•t ƒë·ªãnh",
      "Nh√¢n v·∫≠t ƒë·ªôc quy·ªÅn & skin ƒë·∫∑c bi·ªát",
      "Hi·ªÉn th·ªã th√†nh t√≠ch & huy hi·ªáu",
      "Theo d√µi ti·∫øn ƒë·ªô thu th·∫≠p nh√¢n v·∫≠t",
    ],
    color: "from-yellow-400 to-orange-400",
  },
  {
    icon: Users,
    title: "B√°o C√°o Cho Ph·ª• Huynh",
    description:
      "C√¥ng c·ª• theo d√µi to√†n di·ªán, gi√∫p ba m·∫π n·∫Øm b·∫Øt ti·∫øn ƒë·ªô h·ªçc t·∫≠p c·ªßa con.",
    details: [
      "B√°o c√°o chi ti·∫øt h√†ng tu·∫ßn",
      "Th·ªëng k√™ h·ªçc t·∫≠p th·ª±c t·∫ø",
      "Th√¥ng b√°o ti·∫øn ƒë·ªô t·ª± ƒë·ªông",
      "Ph√¢n t√≠ch ƒëi·ªÉm y·∫øu & ƒëi·ªÉm m·∫°nh",
      "G·ª£i √Ω c·∫£i thi·ªán c√° nh√¢n h√≥a",
    ],
    color: "from-green-400 to-emerald-400",
  },
  {
    icon: Shield,
    title: "C·ª≠a H√†ng Nh√¢n V·∫≠t & V·∫≠t Ph·∫©m",
    description:
      "M·ªü kh√≥a 50+ nh√¢n v·∫≠t ƒë·ªôc quy·ªÅn b·∫±ng c√°ch ho√†n th√†nh b√†i h·ªçc v√† t√≠ch l≈©y star.",
    details: [
      "50+ nh√¢n v·∫≠t ƒë·∫∑c bi·ªát ƒë·ªÉ s∆∞u t·∫ßm",
      "M·ªü kh√≥a theo m·ª©c star ƒë·∫°t ƒë∆∞·ª£c",
      "Skin & theme ƒë·ªôc quy·ªÅn cho nh√¢n v·∫≠t",
      "V·∫≠t ph·∫©m trang tr√≠ ƒë·ªÉ s∆∞u t·∫ßm",
      "Qu√† t·∫∑ng h√†ng ng√†y mi·ªÖn ph√≠",
    ],
    color: "from-purple-400 to-indigo-400",
  },
  {
    icon: Shield,
    title: "T∆∞∆°ng Th√≠ch ƒêa Thi·∫øt B·ªã",
    description: "Tr·∫£i nghi·ªám li·ªÅn m·∫°ch tr√™n m·ªçi thi·∫øt b·ªã, m·ªçi n∆°i m·ªçi l√∫c.",
    details: [
      "H·ªó tr·ª£ iOS & Android",
      "T·ªëi ∆∞u cho m√°y t√≠nh b·∫£ng",
      "ƒê·ªìng b·ªô ƒëa n·ªÅn t·∫£ng",
      "Truy c·∫≠p n·ªôi dung offline",
      "L∆∞u ti·∫øn tr√¨nh tr√™n ƒë√°m m√¢y",
    ],
    color: "from-teal-400 to-blue-400",
  },
];

const premiumPlans = [
  {
    name: "Free",
    price: "Mi·ªÖn ph√≠",
    description: "B·∫Øt ƒë·∫ßu h√†nh tr√¨nh h·ªçc t·∫≠p",
    features: [
      "Truy c·∫≠p m·ªôt s·ªë b√†i h·ªçc",
      "Tham gia cu·ªôc thi c√πng b·∫°n b√®",
      "B√°o c√°o ti·∫øn ƒë·ªô c∆° b·∫£n",
    ],
    color: "from-blue-50 to-cyan-50",
    borderColor: "border-blue-200",
    highlighted: false,
  },
  {
    name: "Premium",
    price: "‚Ç´59,000",
    period: "/ th√°ng",
    description: "Tr·∫£i nghi·ªám ƒë·∫ßy ƒë·ªß",
    features: [
      "Truy c·∫≠p t·∫•t c·∫£ 50+ b√†i h·ªçc",
      "Tham gia cu·ªôc thi c√πng b·∫°n b√®",
      "B√°o c√°o chi ti·∫øt cho ph·ª• huynh",
      "Huy hi·ªáu & ph·∫ßn th∆∞·ªüng ƒë·ªôc quy·ªÅn",
      "H·ªó tr·ª£ ∆∞u ti√™n 24/7",
      "C·∫≠p nh·∫≠t n·ªôi dung m·ªõi mi·ªÖn ph√≠",
    ],
    color: "from-purple-50 via-pink-50 to-purple-50",
    borderColor: "border-purple-300",
    highlighted: true,
    badge: "Ph·ªï bi·∫øn nh·∫•t",
  },
  {
    name: "Premium NƒÉm",
    price: "‚Ç´549,000",
    period: "/ nƒÉm",
    description: "Ti·∫øt ki·ªám h∆°n c·∫£ nƒÉm",
    features: [
      "T·∫•t c·∫£ t√≠nh nƒÉng Premium",
      "Ti·∫øt ki·ªám 20% so v·ªõi theo th√°ng",
      "Truy c·∫≠p t·∫•t c·∫£ 50+ b√†i h·ªçc",
      "Tham gia cu·ªôc thi c√πng b·∫°n b√®",
      "H·ªó tr·ª£ ∆∞u ti√™n 24/7",
      "C·∫≠p nh·∫≠t n·ªôi dung m·ªõi mi·ªÖn ph√≠",
    ],
    color: "from-yellow-50 to-orange-50",
    borderColor: "border-orange-200",
    highlighted: true,
  },
];

const testimonials = [
  {
    name: "TS. Sarah Williams",
    role: "Chuy√™n Gia Ph√°t Tri·ªÉn Tr·∫ª Em",
    quote:
      "LogiNeko c√¢n b·∫±ng ho√†n h·∫£o gi·ªØa gi√°o d·ª•c v√† gi·∫£i tr√≠. Tr·∫ª em h·ªçc m√† kh√¥ng c·∫£m th·∫•y b·ªã √©p bu·ªôc!",
    rating: 5,
  },
  {
    name: "Hi·ªáu Tr∆∞·ªüng Mark Thompson",
    role: "Tr∆∞·ªùng Ti·ªÉu H·ªçc Hope Hill",
    quote:
      "Ch√∫ng t√¥i lu√¥n gi·ªõi thi·ªáu LogiNeko ƒë·∫øn c√°c b·∫≠c ph·ª• huynh. M·ªôt c√¥ng c·ª• h·ªó tr·ª£ h·ªçc t·∫≠p tuy·ªát v·ªùi!",
    rating: 5,
  },
  {
    name: "Ph·ª• huynh Jennifer Chen",
    role: "Gi√°o d·ª•c t·∫°i nh√†",
    quote:
      "·ª®ng d·ª•ng n√†y ƒë√£ thay ƒë·ªïi ho√†n to√†n l·ªãch h·ªçc ·ªü nh√† v√† tr√™n tr∆∞·ªùng. C√°c con t√¥i mong ƒë·ª£i gi·ªù h·ªçc m·ªõi ng√†y!",
    rating: 5,
  },
];

export default function Home() {
  const [showVideo, setShowVideo] = useState(false);

  return (
    <div className="min-h-screen">
      <section className="relative overflow-hidden bg-gradient-to-br from-pink-50 via-purple-50 to-cyan-50 py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div className="space-y-8">
              <div className="space-y-4">
                <Badge className="bg-purple-100 text-purple-800 px-4 py-2 rounded-full">
                  üéâ T√≠nh nƒÉng m·ªõi ƒë√£ c√≥ s·∫µn!
                </Badge>
                <h1 className="text-5xl lg:text-6xl font-bold leading-tight">
                  <span className="bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
                    Learn & Play with
                  </span>
                  <span className="bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
                    {" "}
                    Neko M√®o Con!
                  </span>
                  üê±
                </h1>
                <p className="text-xl text-gray-600 leading-relaxed">
                  C√πng Neko, ng∆∞·ªùi b·∫°n m√®o ƒë√°ng y√™u c·ªßa b√©, kh√°m ph√° nh·ªØng cu·ªôc
                  phi√™u l∆∞u h·ªçc t·∫≠p th√∫ v·ªã! Ho√†n h·∫£o cho tr·∫ª em t·ª´ 5-10 tu·ªïi v·ªõi
                  nh·ªØng c√¢u chuy·ªán t∆∞∆°ng t√°c, tr√≤ ch∆°i vui nh·ªôn v√† ho·∫°t ƒë·ªông h·∫•p
                  d·∫´n.
                </p>
              </div>

              <div className="flex flex-col sm:flex-row gap-4">
                <Button
                  size="lg"
                  className="cursor-pointer bg-gradient-to-r from-pink-500 to-violet-600 hover:from-pink-600 hover:to-violet-700 text-white rounded-full px-8 py-4 text-lg font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 hover:rotate-1"
                >
                  <Play className="w-5 h-5 mr-2 animate-pulse" />
                  B·∫Øt ƒë·∫ßu h·ªçc ngay h√¥m nay
                </Button>
                <Button
                  size="lg"
                  variant="outline"
                  className="cursor-pointer rounded-full px-8 py-4 text-lg font-semibold border-2 border-pink-500 text-pink-600 hover:bg-gradient-to-r hover:from-pink-500 hover:to-violet-600 hover:text-white hover:border-transparent transform hover:scale-105 transition-all duration-300 hover:-rotate-1 hover:shadow-lg"
                  onClick={() => setShowVideo(true)}
                >
                  <Play className="w-5 h-5 mr-2" />
                  Xem video gi·ªõi thi·ªáu
                </Button>
              </div>

              <div className="flex items-center space-x-6 text-sm text-gray-600">
                <div className="flex items-center space-x-1">
                  <Star className="w-5 h-5 text-yellow-400 fill-current" />
                  <span className="font-semibold">4.9/5</span>
                  <span>App Store</span>
                </div>
                <div className="flex items-center space-x-1">
                  <Users className="w-5 h-5 text-blue-500" />
                  <span className="font-semibold">50K+</span>
                  <span>B√© y√™u th√≠ch</span>
                </div>
              </div>
            </div>

            <div className="relative group">
              <div className="bg-gradient-to-r from-pink-500 to-violet-600 rounded-3xl p-2 shadow-xl hover:shadow-2xl transform rotate-3 hover:rotate-0 transition-all duration-500 group-hover:scale-105">
                <div className="bg-white rounded-3xl p-6 space-y-4 relative overflow-hidden">
                  <div className="absolute inset-0 bg-gradient-to-r from-pink-100 to-violet-100 opacity-0 group-hover:opacity-50 transition-opacity duration-300"></div>
                  <div className="flex items-center justify-between relative z-10">
                    <div className="w-12 h-12 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center animate-bounce">
                      <span className="text-2xl">üìö</span>
                    </div>
                    <Badge className="bg-green-100 text-green-800 animate-pulse">
                      Tr·ª±c tuy·∫øn
                    </Badge>
                  </div>
                  <h3 className="text-2xl font-bold text-gray-800 relative z-10 group-hover:text-pink-600 transition-colors duration-300">
                    ·ª®ng d·ª•ng LogiNeko
                  </h3>
                  <p className="text-gray-600 relative z-10 group-hover:text-gray-700 transition-colors duration-300">
                    H·ªçc t·∫≠p t∆∞∆°ng t√°c cho tr·∫ª 5-10 tu·ªïi
                  </p>
                  <div className="grid grid-cols-3 gap-4 relative z-10">
                    <div className="text-center transform group-hover:scale-110 transition-transform duration-300">
                      <div className="w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-2 group-hover:bg-yellow-200 transition-colors duration-300">
                        <span className="text-xl">üìù</span>
                      </div>
                      <span className="text-xs text-gray-600">Ch·ªØ c√°i</span>
                    </div>
                    <div className="text-center transform group-hover:scale-110 transition-transform duration-300 delay-100">
                      <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-2 group-hover:bg-blue-200 transition-colors duration-300">
                        <span className="text-xl">üî¢</span>
                      </div>
                      <span className="text-xs text-gray-600">S·ªë h·ªçc</span>
                    </div>
                    <div className="text-center transform group-hover:scale-110 transition-transform duration-300 delay-200">
                      <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-2 group-hover:bg-green-200 transition-colors duration-300">
                        <span className="text-xl">üé®</span>
                      </div>
                      <span className="text-xs text-gray-600">Ngh·ªá thu·∫≠t</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center space-y-4 mb-16">
            <h2 className="text-4xl font-bold bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
              T·∫°i sao tr·∫ª em y√™u th√≠ch LogiNeko
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              ƒê∆∞·ª£c thi·∫øt k·∫ø c√πng c√°c chuy√™n gia ph√°t tri·ªÉn tr·∫ª em ƒë·ªÉ l√†m cho
              vi·ªác h·ªçc t·∫≠p tr·ªü n√™n h·∫•p d·∫´n, an to√†n v√† hi·ªáu qu·∫£
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            <Card className="rounded-3xl shadow-lg hover:shadow-2xl transition-all duration-300 border-0 bg-gradient-to-br from-red-50 to-pink-50 transform hover:scale-105 hover:-rotate-1 group cursor-pointer">
              <CardHeader className="text-center">
                <div className="w-16 h-16 bg-gradient-to-r from-pink-500 to-rose-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg group-hover:shadow-xl group-hover:scale-110 transition-all duration-300">
                  <BookOpen className="w-8 h-8 text-white" />
                </div>
                <CardTitle className="text-xl font-bold text-gray-800 group-hover:text-pink-600 transition-colors duration-300">
                  H·ªçc t·∫≠p c·ªßa Neko
                </CardTitle>
              </CardHeader>
              <CardContent>
                <CardDescription className="text-center text-gray-600 group-hover:text-gray-700 transition-colors duration-300">
                  C√πng Neko trong nh·ªØng cu·ªôc phi√™u l∆∞u ƒë∆∞·ª£c minh h·ªça tuy·ªát ƒë·∫πp
                  v·ªõi gi·ªçng k·ªÉ chuy·ªán chuy√™n nghi·ªáp ƒë·ªÉ c·∫£i thi·ªán k·ªπ nƒÉng ƒë·ªçc v√†
                  nghe.
                </CardDescription>
              </CardContent>
            </Card>

            <Card className="rounded-3xl shadow-lg hover:shadow-2xl transition-all duration-300 border-0 bg-gradient-to-br from-blue-50 to-cyan-50 transform hover:scale-105 hover:rotate-1 group cursor-pointer">
              <CardHeader className="text-center">
                <div className="w-16 h-16 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg group-hover:shadow-xl group-hover:scale-110 transition-all duration-300">
                  <Gamepad2 className="w-8 h-8 text-white" />
                </div>
                <CardTitle className="text-xl font-bold text-gray-800 group-hover:text-blue-600 transition-colors duration-300">
                  Thi c√πng Neko
                </CardTitle>
              </CardHeader>
              <CardContent>
                <CardDescription className="text-center text-gray-600 group-hover:text-gray-700 transition-colors duration-300">
                  C√πng Neko trong nh·ªØng tr√≤ ch∆°i gi√°o d·ª•c vui nh·ªôn d·∫°y to√°n h·ªçc,
                  ƒë·ªçc vi·∫øt v√† k·ªπ nƒÉng gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ th√¥ng qua tr√≤ ch∆°i t∆∞∆°ng
                  t√°c.
                </CardDescription>
              </CardContent>
            </Card>

            <Card className="rounded-3xl shadow-lg hover:shadow-2xl transition-all duration-300 border-0 bg-gradient-to-br from-green-50 to-emerald-50 transform hover:scale-105 hover:-rotate-1 group cursor-pointer">
              <CardHeader className="text-center">
                <div className="w-16 h-16 bg-gradient-to-r from-yellow-400 to-orange-400 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg group-hover:shadow-xl group-hover:scale-110 transition-all duration-300">
                  <Award className="w-8 h-8 text-white" />
                </div>
                <CardTitle className="text-xl font-bold text-gray-800 group-hover:text-green-600 transition-colors duration-300">
                  Theo d√µi ti·∫øn ƒë·ªô c√πng Neko
                </CardTitle>
              </CardHeader>
              <CardContent>
                <CardDescription className="text-center text-gray-600 group-hover:text-gray-700 transition-colors duration-300">
                  Theo d√µi s·ª± ph√°t tri·ªÉn c·ªßa con b√© c√πng Neko! B√°o c√°o ti·∫øn ƒë·ªô
                  chi ti·∫øt v√† th√†nh t√≠ch ƒë·ªÉ an m·ª´ng nh·ªØng c·ªôt m·ªëc h·ªçc t·∫≠p.
                </CardDescription>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center space-y-4 mb-16">
            <h2 className="text-4xl font-bold bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
              T√≠nh NƒÉng M·∫°nh M·∫Ω Cho Vi·ªác H·ªçc Hi·ªáu Qu·∫£
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              M·ªçi t√≠nh nƒÉng ƒë·ªÅu ƒë∆∞·ª£c thi·∫øt k·∫ø c·∫©n th·∫≠n ƒë·ªÉ h·ªó tr·ª£ s·ª± ph√°t tri·ªÉn
              v√† h√†nh tr√¨nh h·ªçc t·∫≠p c·ªßa con b·∫°n
            </p>
          </div>

          <div className="grid lg:grid-cols-2 gap-12">
            {mainFeatures.map((feature) => {
              const IconComponent = feature.icon;
              return (
                <Card
                  key={feature.title}
                  className="rounded-3xl shadow-lg hover:shadow-2xl transition-all duration-300 border-0 overflow-hidden"
                >
                  <CardHeader className="relative">
                    <div
                      className={`w-16 h-16 bg-gradient-to-r ${feature.color} rounded-full flex items-center justify-center mb-4`}
                    >
                      <IconComponent className="w-8 h-8 text-white" />
                    </div>
                    <CardTitle className="text-2xl font-bold text-gray-800">
                      {feature.title}
                    </CardTitle>
                    <CardDescription className="text-gray-600 text-lg">
                      {feature.description}
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <ul className="space-y-3">
                      {feature.details.map((detail, i) => (
                        <li key={i} className="flex items-center space-x-3">
                          <CheckCircle className="w-5 h-5 text-green-500 flex-shrink-0" />
                          <span className="text-gray-700">{detail}</span>
                        </li>
                      ))}
                    </ul>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      </section>

      <section className="py-20 bg-gradient-to-b from-gray-50 to-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center space-y-4 mb-16">
            <Badge className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-6 py-2 rounded-full inline-block">
              <Sparkles className="w-4 h-4 inline mr-2" />
              G√≥i Premium
            </Badge>
            <h2 className="text-4xl font-bold bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
              Ch·ªçn G√≥i Ph√π H·ª£p Cho Con B√©
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              N√¢ng c·∫•p ƒë·ªÉ m·ªü kh√≥a t·∫•t c·∫£ t√≠nh nƒÉng v√† n·ªôi dung ƒë·ªôc quy·ªÅn
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8 mb-8">
            {premiumPlans.map((plan, index) => (
              <div
                key={index}
                className={`relative rounded-3xl shadow-lg transition-all duration-300 ${
                  plan.highlighted ? "md:scale-105 z-10 shadow-2xl" : ""
                }`}
              >
                {plan.highlighted && (
                  <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                    <Badge className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-4 py-1 rounded-full">
                      {plan.badge}
                    </Badge>
                  </div>
                )}

                <Card
                  className={`rounded-3xl border-2 h-full ${
                    plan.highlighted
                      ? `border-gradient-to-r ${plan.borderColor} bg-gradient-to-br ${plan.color}`
                      : `${plan.borderColor} bg-gradient-to-br ${plan.color}`
                  }`}
                >
                  <CardHeader className="text-center pb-2">
                    <CardTitle className="text-2xl font-bold text-gray-800 mb-2">
                      {plan.name}
                    </CardTitle>
                    <div className="space-y-2">
                      <p className="text-4xl font-bold bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
                        {plan.price}{" "}
                        {plan.period && (
                          <span className="text-sm text-gray-600">
                            {plan.period}
                          </span>
                        )}
                      </p>
                    </div>
                    <CardDescription className="text-gray-700 mt-2">
                      {plan.description}
                    </CardDescription>
                  </CardHeader>

                  <CardContent className="space-y-6">
                    <Button
                      className={`w-full rounded-full py-3 text-lg font-semibold transition-all cursor-pointer duration-300 ${
                        plan.highlighted
                          ? "bg-gradient-to-r from-purple-500 to-pink-500 hover:shadow-lg text-white"
                          : "bg-white border-2 border-black text-gray-800 hover:bg-gray-50"
                      }`}
                    >
                      {plan.name === "Free"
                        ? "B·∫Øt ƒë·∫ßu mi·ªÖn ph√≠"
                        : "N√¢ng c·∫•p ngay"}
                    </Button>

                    <ul className="space-y-3">
                      {plan.features.map((feature, i) => (
                        <li key={i} className="flex items-start gap-3">
                          <CheckCircle className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" />
                          <span className="text-gray-700 text-sm">
                            {feature}
                          </span>
                        </li>
                      ))}
                    </ul>
                  </CardContent>
                </Card>
              </div>
            ))}
          </div>
        </div>
      </section>

      <section className="py-20 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center space-y-4 mb-16">
            <h2 className="text-4xl font-bold bg-gradient-to-r from-pink-500 to-violet-600 bg-clip-text text-transparent">
              ƒê∆∞·ª£c C√°c Chuy√™n Gia Tin C·∫≠y
            </h2>
            <p className="text-xl text-gray-600">
              Xem c√°c chuy√™n gia gi√°o d·ª•c n√≥i g√¨ v·ªÅ LogiNeko
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            {testimonials.map((testimonial, index) => (
              <Card
                key={index}
                className="rounded-3xl shadow-lg border-0 bg-white hover:shadow-xl transition-all duration-300"
              >
                <CardContent className="p-6">
                  <div className="flex items-center space-x-1 mb-4">
                    {[...Array(testimonial.rating)].map((_, i) => (
                      <Star
                        key={i}
                        className="w-5 h-5 text-yellow-400 fill-current"
                      />
                    ))}
                  </div>
                  <p className="text-gray-600 mb-6 italic">
                    "{testimonial.quote}"
                  </p>
                  <div className="flex items-center space-x-3">
                    <div className="w-12 h-12 bg-gradient-to-r from-pink-500 to-violet-600 rounded-full flex items-center justify-center">
                      <span className="text-white font-bold text-lg">
                        {testimonial.name.charAt(0)}
                      </span>
                    </div>
                    <div>
                      <p className="font-semibold text-gray-800">
                        {testimonial.name}
                      </p>
                      <p className="text-sm text-gray-500">
                        {testimonial.role}
                      </p>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section className="py-10 bg-gradient-to-r from-pink-500 via-purple-600 to-indigo-600">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="space-y-4">
            <h2 className="text-2xl font-bold text-white">
              S·∫µn S√†ng Cho H√†nh Tr√¨nh H·ªçc T·∫≠p C√πng Neko Ch∆∞a?
            </h2>
            <p className="text-xl text-white/90">
              H√†ng ng√†n gia ƒë√¨nh ƒë√£ tin t∆∞·ªüng LogiNeko ƒë·ªÉ ƒë·ªìng h√†nh c√πng con
              trong gi√°o d·ª•c.
            </p>

            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button
                size="lg"
                className="bg-white text-primary hover:bg-gray-100 rounded-full px-8 py-4 text-lg font-semibold shadow-lg"
              >
                <Download className="w-5 h-5 mr-2" />
                T·∫£i ·ª®ng D·ª•ng Mi·ªÖn Ph√≠
              </Button>
              <Button
                size="lg"
                className="bg-white/20 text-white hover:bg-white/30 border-2 border-white rounded-full px-8 py-4 text-lg font-semibold backdrop-blur-sm"
              >
                N√¢ng C·∫•p Premium
              </Button>
            </div>

            <div className="flex items-center justify-center space-x-8 text-white/80 flex-wrap gap-4">
              <div className="flex items-center space-x-2">
                <CheckCircle className="w-5 h-5" />
                <span>T·∫£i mi·ªÖn ph√≠</span>
              </div>
              <div className="flex items-center space-x-2">
                <CheckCircle className="w-5 h-5" />
                <span>Kh√¥ng qu·∫£ng c√°o</span>
              </div>
              <div className="flex items-center space-x-2">
                <CheckCircle className="w-5 h-5" />
                <span>An to√†n cho tr·∫ª</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      <Footer />

      {showVideo && (
        <div className="fixed inset-0 z-50 bg-black bg-opacity-75 flex items-center justify-center p-4">
          <div className="relative bg-white rounded-3xl max-w-4xl w-full max-h-[90vh] overflow-hidden">
            <button
              onClick={() => setShowVideo(false)}
              className="absolute top-4 right-4 z-10 bg-white rounded-full p-2 shadow-lg hover:bg-red-50 hover:shadow-xl transition-all duration-300 transform hover:scale-110 hover:rotate-90 group"
            >
              <X className="w-6 h-6 text-gray-600 group-hover:text-red-500 transition-colors duration-300" />
            </button>
            <div className="aspect-video">
              <iframe
                width="100%"
                height="100%"
                src="https://www.youtube.com/embed/dQw4w9WgXcQ?autoplay=1"
                title="Video gi·ªõi thi·ªáu LogiNeko"
                frameBorder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                allowFullScreen
                className="rounded-2xl"
              ></iframe>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
